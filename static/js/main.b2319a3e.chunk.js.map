{"version":3,"sources":["user.png","components/context/Context.js","components/Header.js","components/Table/Column.js","components/CellTypes/TdString.js","components/CellTypes/TdDateTime.js","components/CellTypes/TdNumber.js","components/CellTypes/TdBoolean.js","components/Table/Row.js","components/NameOfCellsTypes/NameOfCells.js","components/Table/Table.js","Loader.js","components/Search.js","components/AddRow.js","components/Form/InputString.js","components/Form/InputActive.js","components/Form/InputAge.js","components/Form/InputDate.js","components/Form/Form.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","TableContext","createContext","Header","saveRow","active","className","onClick","alert","src","image","alt","Column","props","classes","column","data","toLowerCase","push","join","TdString","td","is_mutable","table","useContext","classRelative","classAbsolute","useState","stringValue","setValue","changeble","setChangeble","useEffect","disabled","checkChangeble","forDisabled","type","style","boxShadow","position","width","height","fontSize","border","outline","textAlign","top","left","bottom","right","onChange","event","target","value","onBlur","changeStatus","row","onMouseEnter","focus","useStyles","makeStyles","theme","container","display","flexWrap","textField","marginLeft","spacing","marginRight","TdDateTime","selectedDate","setSelectedDate","date","newDate","Date","getDate","month","getMonth","year","getFullYear","setDate","noValidate","element","tagName","querySelector","TextField","id","label","defaultValue","InputLabelProps","shrink","TdNumber","number","setNumbers","TdBoolean","htmlFor","defaultChecked","Row","map","index","key","Table","rows","tableName","titles","loading","returnPreviousState","sorted","sortRows","length","justifyContent","margin","Search","placeholder","findRows","AddRow","showForm","InputString","title","saveNewUser","removeWarning","errors","correct","setCorrect","name","data-type","data-number","dataset","InputActive","InputAge","InputDate","Form","warning","closeForm","onSubmit","preventDefault","dateRegexp","RegExp","booleanRegexp","numberRegexp","App","setTableName","setHeaders","setLoading","setRows","setSorted","setDisabled","setSortRows","defaultRows","setDefaultRows","setState","valuesForNewUser","setValuesForNewUser","setErrors","setWarning","countRows","list","update","count","user","cells","elem","sendDatas","Promise","resolve","reject","firebase","then","resp","axios","get","each","patch","concat","catch","error","Error","controlDate","datetime","action","ref","on","val","header_cells","users","table_name","Provider","x","y","item","currentValue","prev","found","curValue","date2","date1","spliter","split","reverse","toString","test","checked","Object","values","checkFields","newUser","object","assign","Loader","Boolean","window","location","hostname","match","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.b2319a3e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/user.4e76d415.png\";","import {createContext} from 'react'\n\nexport const TableContext = createContext();","\nimport React, {useState, useContext} from 'react'\nimport {TableContext} from './context/Context.js';\nimport image from '../user.png'\n\n\n\nexport const Header = ({ saveRow , active})=>{\n\n\n    return(\n          \n        <div className=\"header\">\n            <button className=\"btn\" onClick={()=>{\n                active ? saveRow() : alert('Заполните форму')\n            }}>Save</button>\n            <img className=\"logo\" src={image} alt=\"user\"/>\n        </div>\n    )\n    \n}","import React from 'react'\n\nexport const Column = (props)=>{\n\n    let classes = [];\n\n    if(props.column.data.toLowerCase() === 'date'){\n      classes.push('date-td')\n    }\n\n    return(\n        <th className={`${classes.join('')}`}>{props.column.data}</th>\n    )\n}\n    \n\n\n\n\n","import React, {useState, useContext, useEffect} from 'react'\nimport {TableContext} from '../context/Context.js'\n\n\nexport const TdString = ({td})=>{\n\n  let { data, is_mutable } = td;\n\n  let table = useContext(TableContext);\n  let classRelative = [];\n  let classAbsolute = [];\n\n  \n  let [stringValue , setValue] = useState('')\n  let [changeble, setChangeble] = useState(false)\n\n\n  useEffect(()=>{\n    \n    setValue(data)\n\n  }, [data])\n\n  function checkChangeble(){\n\n    if(table.disabled){\n      return\n    }\n\n    return is_mutable ? setChangeble(true) : null \n  \n  }\n\n   if(is_mutable && changeble){\n    classRelative.push('td_picker')\n    classAbsolute.push('for-string')\n   } \n\n    return(\n        <td className={`${classRelative.join('')}`} onClick={()=>{ checkChangeble(); table.forDisabled() }} >\n          {\n            \n            \n            ((is_mutable === true || is_mutable === false) && changeble === false) ? stringValue  \n                                                                                    :\n              <input type='text' \n                className = {`${classAbsolute.join('')}`}\n                style={{boxShadow: '0px 0px 5px 1px blue', position: 'absolute', width: '98%', height: '96%',fontSize: '17px', border: 'none', outline: 'none', textAlign: 'center', top: `${0}px`, left: `${0}px`, bottom: `${0}px`, right:`${0}px`}}\n                onChange={(event)=>{ setValue(event.target.value) }}   \n                value={stringValue}\n                onBlur={()=>{ setChangeble(false); table.changeStatus(td.row, td.column, td.type, stringValue) }}\n                onMouseEnter={(event)=>{ event.target.focus() }}\n              />                  \n \n          }\n\n        </td>\n    )\n    \n}","import React, {useState, useContext, useEffect} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport {TableContext} from '../context/Context.js';\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 140,\n  },\n}));\n\nconst setDate = (value)=>{\n  let newDate = new Date(value);\n  let date = newDate.getDate();\n  let month = newDate.getMonth();\n  let year = newDate.getFullYear();\n      \n     if(date < 10){\n        date = '0' + date\n     }\n     \n     if(month < 9){\n        month = '0' + (month + 1)\n     }\n     else{\n       month = month + 1\n     }\n  \n    return `${year}-${month}-${date}`\n  \n  }\n\n\n\n\n\nexport const TdDateTime = ({td})=>{\n\n  let { data, is_mutable } = td;\n  \n  let table = useContext(TableContext);\n  let classRelative = [];\n  let classAbsolute = [];\n\n  \n\nlet [selectedDate, setSelectedDate] = useState(0)\nlet [changeble, setChangeble] = useState(false)\nlet classes = useStyles();\n\nuseEffect(()=>{\n  let date = setDate(data) \n  setSelectedDate(date)\n\n}, [data])\n\n\nfunction setTextInputRef(element){\n  if(element.tagName !== 'INPUT'){\n    element.querySelector('input').focus()\n  }\n  else{\n    element.focus()\n  }\n  \n}\n\nfunction checkChangeble(){\n\n  return is_mutable ? setChangeble(true) : null \n\n}\n\n\nif(is_mutable && changeble){\n  classRelative.push('td_picker')\n  classAbsolute.push('for-calendar')\n } \n \n\nreturn(\n\n     <td className={`${classRelative.join('')}`} onClick={()=>{ checkChangeble() }}>\n\n      {\n        ((is_mutable === true || is_mutable === false) && changeble === false) ? selectedDate \n                                                                               : \n\n                              <form className={`${classes.container} ${classAbsolute.join('')}`} \n                                       noValidate\n                                       onMouseEnter={(event)=>{ setTextInputRef(event.target) }}\n                                  >\n                                      <TextField\n                                        id=\"date\"\n                                        label=\"Choose date\"\n                                        type=\"date\"\n                                        defaultValue={selectedDate}\n                                        className={classes.textField}\n                                        InputLabelProps={{\n                                          shrink: true,\n                                        }}\n                                        onChange={(event)=>{ setSelectedDate(event.target.value); setChangeble(false); table.changeStatus(td.row, td.column, td.type, event.target.value)}}\n                                        onBlur={()=>{ setChangeble(false) }}\n                                      />\n                                </form>\n                                                                          \n      }\n      \n    </td>\n   \n   \n\n     )\n    \n}","import React, { useState, useContext, useEffect } from 'react'\nimport {TableContext} from '../context/Context.js'\n\n\n\n\nexport const TdNumber = ({td})=>{\n\n  let { data, is_mutable } = td;\n  \n  let table = useContext(TableContext);\n  let classRelative = [];\n  let classAbsolute = [];\n\n\n  let [number , setNumbers] = useState('')\n  let [changeble, setChangeble] = useState(false)\n\n  useEffect(()=>{\n    \n    setNumbers(data)\n\n  }, [data])\n\n  function checkChangeble(){\n    if(table.disabled){\n      return \n    }\n\n    return is_mutable ? setChangeble(true) : null \n  \n  }\n\n\n\n   if(is_mutable && changeble){\n    classRelative.push('td_picker')\n    classAbsolute.push('for-number')\n   } \n\n  return(\n       \n        \n         \n      <td className={`${classRelative.join('')}`} onClick={()=>{ checkChangeble(); table.forDisabled();}}>\n        {\n            ((is_mutable === true || is_mutable === false) && changeble === false) ? number \n                                                                                   : \n              <input type='text' \n                className = {`${classAbsolute.join('')}`}\n                style={{boxShadow: '0px 0px 5px 1px blue', position: 'absolute', width: '98%', height: '96%',fontSize: '17px', border: 'none', outline: 'none', textAlign: 'center', top: `${0}px`, left: `${0}px`, bottom: `${0}px`, right:`${0}px`}}\n                onChange={(event)=>{ setNumbers(event.target.value) }}   \n                value={number}\n                onBlur={()=>{ setChangeble(false); table.changeStatus(td.row, td.column, td.type, number)  }}\n                onMouseEnter={(event)=>{ event.target.focus() }}\n              />                   \n                                   \n        }\n         \n            \n      </td>   \n            \n\n        \n      \n\n  )\n}\n\n\n\n    \n \n","import React, {useContext} from 'react'\nimport {TableContext} from '../context/Context.js'\n\n\nexport const TdBoolean = ({td})=>{\n \nlet table = useContext(TableContext);\n\n\n    return(\n            <td>\n\n            \n            <label htmlFor={`for${td.row}${td.column}`} className={`for-status ${td.data ? 'checked' : 'unchecked'}`}>\n                <input \n                    type=\"checkbox\"\n                    className=\"checkbox\" \n                    defaultChecked={td.data} \n                    id={`for${td.row}${td.column}`}\n                    onClick={ ()=>{table.changeStatus(td.row, td.column, td.type, null)} }\n                />\n            </label>\n\n            </td>\n          )\n \n}","import React from 'react'\nimport {TdString} from '../CellTypes/TdString.js'\nimport {TdDateTime} from '../CellTypes/TdDateTime.js'\nimport {TdNumber} from '../CellTypes/TdNumber.js'\nimport {TdBoolean} from '../CellTypes/TdBoolean.js'\nimport {STRING, DATETIME, NUMBER, BOOLEAN} from \"../NameOfCellsTypes/NameOfCells.js\"\n\nexport const Row = (props)=>{\n\n    return(\n        <tr>\n            {\n            props.row.map((td, index)=>{\n                \n                return td.type === STRING ? <TdString  td={td} key={index}/> : \n                       td.type === DATETIME ? <TdDateTime  td={td} key={index}/> : \n                       td.type === NUMBER ? <TdNumber td={td} key={index}/> : \n                       td.type === BOOLEAN ? <TdBoolean td={td} key={index}/> : null\n\n            })\n            }\n        </tr>\n    )\n}","export const STRING = 'string';\nexport const DATETIME = 'datetime';\nexport const NUMBER = 'number';\nexport const BOOLEAN = 'boolean';","import React, {useContext, useState, useEffect} from 'react'\nimport {Column} from './Column.js'\nimport {Row} from \"./Row.js\"\nimport {TableContext} from '../context/Context.js'\n\n\nexport const Table =({ rows })=>{\n\nlet { tableName, titles, loading, sorted, sortRows, returnPreviousState }  = useContext(TableContext);\n  \n        if(loading){\n           return\n        }\n\n        \n    return(\n        \n                               <main className='table'>\n                                   \n                                              {   \n                                               rows.length !== 0 ?\n                                                   <div>\n                                                       <h1 className=\"name\">{tableName}</h1>\n                                        \n                                                        <table className=\"test-table\">\n                                                                    <tbody>\n                                                                    <tr>\n                                                                        {\n                                                                            titles.map((column)=>{\n                                                                                return <Column column={column} key={`${column.row}${column.column}`}/>\n                                                                                \n                                                                            })\n                                                                        }\n                                                                    </tr>\n                                                                    \n                                                                    {\n                                                                        rows.map((row, index)=>{\n                                                                            \n                                                                            return <Row row={row} key={index}/>\n                                                                        })\n                                                                    }\n                                                \n                                                                    </tbody>\n                                                        </table>\n                                                    </div> \n                                                        :\n                                                        <div className=\"return\">\n                                                            <p>No data requested</p> \n                                                            <button onClick={()=>{ returnPreviousState() }}>Return</button>\n                                                        </div> \n                                                   \n                                                          \n                                             }\n                                                                                                    \n                              </main> \n        \n           \n    )\n}\n","import React from 'react'\n\nexport default ()=> <div style={{ display: 'flex', justifyContent: 'center', margin: '.5rem'}}><div className=\"lds-dual-ring\"></div></div>","import React,{ useState, useContext } from 'react';\nimport {TableContext} from './context/Context.js';\n\n\nexport const Search = ()=>{\n\n    let [value, setValue] = useState('');\n    let table = useContext(TableContext);\n\n    function checkValue(elem){\n        if(elem.value === ''){\n            table.returnPreviousState()\n        }\n    }\n\n\n    return(\n        <div className=\"for-search\">\n\n            <div className=\"search-box\">\n               <input \n                    type=\"search\" \n                    value={value}\n                    onChange = {(event)=>{ setValue(event.target.value); checkValue(event.target) }}\n                    placeholder=\"search...\"\n                    />\n               <button \n                className=\"btn\"\n                onClick = {()=>{ table.findRows(value) }}\n                >\n               </button>\n            </div>\n          \n        </div>\n    )\n}","import React, {useState, useContext} from 'react'\nimport {TableContext} from './context/Context.js';\n\n\n\nexport const AddRow = ({ showForm })=>{\n\n    \n    \n   return(\n            \n            <button className=\"add-row\" onClick={ ()=>{ showForm('open') } }>\n                AddRow\n            </button>       \n                    \n   )\n    \n    \n}","import React, {useState, useContext} from 'react'\nimport {TableContext} from '../context/Context.js';\n\n\n\n\nexport const InputString = ({ title, index })=>{\n  \n    let { saveNewUser, removeWarning, errors} = useContext(TableContext);\n    let [correct, setCorrect] = useState('');\n\n    return(\n          \n        <div className=\"input-group\">\n                    <label>{title.data}:</label>\n                    <input className={`${correct}`} type=\"text\" name={title.data} data-type='string' data-number={index} placeholder={`${title.data}`} onChange={(event)=>{\n                        saveNewUser(event.target, event.target.dataset.number, event.target.dataset.type)\n                        setCorrect(errors[title.data].length ? 'attention' : '')\n                        removeWarning()\n                    }}/>\n                    {errors[title.data] !== '' ? <label className=\"uncorrect\">{errors[title.data]}</label> : null}\n        </div>\n    )\n    \n}","import React, {useState, useContext} from 'react'\nimport {TableContext} from '../context/Context.js';\n\n\n\n\nexport const InputActive = ({ title, index })=>{\n  \n    let { saveNewUser, removeWarning, errors} = useContext(TableContext);\n    let [correct, setCorrect] = useState('');\n\n    return(\n          \n        <div className=\"input-group\">\n                    <label>{title.data}:</label>\n                    <input className={`${correct}`} type=\"text\" name={title.data} data-type='boolean' data-number={index} placeholder={`${title.data} + / -`} onChange={(event)=>{\n                        saveNewUser(event.target, event.target.dataset.number, event.target.dataset.type)\n                        setCorrect(errors[title.data].length ? 'attention' : '')\n                        removeWarning()\n                    }}/>\n                    {errors[title.data] !== '' ? <label className=\"uncorrect\">{errors[title.data]}</label> : null}\n        </div>\n    )\n    \n}","import React, {useState, useContext} from 'react'\nimport {TableContext} from '../context/Context.js';\n\n\n\n\nexport const InputAge = ({ title, index })=>{\n  \n    let { saveNewUser, removeWarning, errors} = useContext(TableContext);\n    let [correct, setCorrect] = useState('');\n\n    return(\n          \n        <div className=\"input-group\">\n                    <label>{title.data}:</label>\n                    <input className={`${correct}`} type=\"text\" name={title.data} data-type='number' data-number={index} placeholder={`${title.data}`} onChange={(event)=>{\n                        saveNewUser(event.target, event.target.dataset.number, event.target.dataset.type)\n                        setCorrect(errors[title.data].length ? 'attention' : '')\n                        removeWarning()\n                    }}/>\n                    {errors[title.data] !== '' ? <label className=\"uncorrect\">{errors[title.data]}</label> : null}\n        </div>\n    )\n    \n}","import React, {useState, useContext} from 'react'\nimport {TableContext} from '../context/Context.js';\n\n\n\n\nexport const InputDate = ({ title, index })=>{\n  \n    let { saveNewUser, removeWarning, errors} = useContext(TableContext);\n    let [correct, setCorrect] = useState('');\n\n    return(\n          \n        <div className=\"input-group\">\n                    <label>{title.data}:</label>\n                    <input className={`${correct}`} type=\"text\" name={title.data} data-type='date' data-number={index} placeholder={`${title.data}: yyyy-mm-dd`} onChange={(event)=>{\n                        saveNewUser(event.target, event.target.dataset.number, event.target.dataset.type)\n                        setCorrect(errors[title.data].length ? 'attention' : '')\n                        removeWarning()\n                    }}/>\n                    {errors[title.data] !== '' ? <label className=\"uncorrect\">{errors[title.data]}</label> : null}\n        </div>\n    )\n    \n}","import React, {useState, useContext} from 'react'\nimport {TableContext} from '../context/Context.js';\nimport {InputString} from './InputString.js';\nimport {InputActive} from './InputActive.js';\nimport {InputAge} from './InputAge.js';\nimport {InputDate} from './InputDate.js';\n\n\n\nexport const Form = ({ showForm })=>{\n\n    let { titles, warning, removeWarning, closeForm} = useContext(TableContext);\n    let classes = [];\n\n    if(warning){\n        classes.push('red')\n    }\n\n    \n    \n   return(\n            \n            <form className={`new-user ${classes.join('')}`} onSubmit={(event)=>{ \n                event.preventDefault(); \n                showForm('close')\n                removeWarning()\n            }}\n            >\n                {warning ? <p className=\"form-warning\">Please , fill in the form correctly !!!</p> : ''}\n                {\n                    titles.map((title, index)=>{\n\n                        return  title.data === 'Active' ? <InputActive title={title} index={index} key={index}/> : \n                                title.data === 'Date'   ? <InputDate title={title} index={index} key={index}/> : \n                                title.data === 'Age'    ? <InputAge title={title} index={index} key={index}/> :\n                                <InputString title={title} index={index} key={index}/>\n\n                    })\n                }\n                <button className=\"close-modal\" onClick={()=>{ closeForm() }}>Close</button>\n            </form>\n                    \n   )\n    \n    \n}","import React, {useEffect, useState} from 'react';\nimport {Header} from './components/Header.js';\nimport {Table} from './components/Table/Table.js';\nimport Loader from './Loader.js';\nimport {TableContext} from './components/context/Context.js';\nimport {Search} from './components/Search.js';\nimport {AddRow} from './components/AddRow.js';\nimport {Form} from './components/Form/Form.js';\nimport * as firebase from 'firebase';\nimport axios from 'axios';\n\nconst dateRegexp = RegExp(/(?<year>[0-9]{4})-(?<month>[0-9]{2})-(?<day>[0-9]{2})/g);\nconst booleanRegexp = RegExp(/[-+]{1}/g);\nconst numberRegexp = RegExp(/[0-9]{2}/g);\n\nfunction App() {\n \n  let [tableName, setTableName] = useState(null);\n  let [titles, setHeaders] = useState([]);\n  let [loading, setLoading] = useState(true);\n  let [rows, setRows] = useState([]);\n  let [sorted, setSorted] = useState(false);\n  let [disabled, setDisabled] = useState(false)\n  let [sortRows, setSortRows] = useState([]);\n  let [defaultRows, setDefaultRows] = useState([]);\n  let [active, setState] = useState(false);\n  let [valuesForNewUser, setValuesForNewUser] = useState([]);\n  let [errors, setErrors] = useState({})\n  let [warning, setWarning] = useState(false);\n\n  \n  \n\n  useEffect(()=>{\n    \n          let promise = new Promise((resolve, reject)=>{\n            let db = firebase.database();\n            \n            resolve(db)\n          })\n\n          promise.then((resp)=>{\n\n          return new Promise((resolve,reject)=>{\n              \n                let headers = resp.ref('data');\n                headers.on('value', (elem)=> {\n                      \n                      titles = elem.val().header_cells\n                      setHeaders(titles)\n                      resolve(resp)\n                  })\n            })\n            \n            })\n            .then((resp)=>{\n              \n            return new Promise((resolve,reject)=>{\n                \n                let cells = resp.ref('data');\n\n                cells.on('value', (elem)=> {\n                  \n                  let users = elem.val();\n                      rows = countRows(users, false);\n                  \n                  })\n                    setRows(rows)\n                    resolve(resp)\n                })\n                \n              \n            })\n            .then((resp)=>{\n              \n            return new Promise((resolve,reject)=>{\n              \n                let tableTitle = resp.ref('data');\n                \n                tableTitle.on('value', (elem)=> {\n                      \n                      tableName = elem.val()\n                      setTableName(tableName.table_name)\n                      resolve(resp)\n                })\n                \n            })\n\n            })\n            .then(()=>{\n\n              setLoading(false);\n\n            })\n\n  }, [])\n\n\n  \n  function countRows(list, update){\n    \n    if(update){\n      rows=[]\n      setRows(rows) \n     }\n\n     if(sorted){\n        \n     }\n    \n    let count = 1;\n    let user = [];\n               \n    list.cells.map((elem)=>{\n        if(count === titles.length){\n            user.push(elem)\n            rows.push(user)\n            count = 1\n            user= []            \n          }\n        else{\n            user.push(elem)\n            count++\n            }\n    })\n           \n            return rows;\n  }\n\n\n  function sendDatas(value, type){\n\n    let promise = new Promise((resolve, reject)=>{\n      let db = firebase.database();\n          resolve(db);\n        })\n\n       promise.then((resp)=>{\n\n              return new Promise((resolve)=>{\n\n                let res = axios.get('https://test-table-9a0f5.firebaseio.com/data.json');\n                resolve(res)\n\n              })   \n                  \n              })\n               .then((resp)=>{\n                   if(type === 'boolean'){\n                      return new Promise((resolve)=>{\n\n                        value.map((row)=>{\n                          row.map((each)=>{\n                            resp.data.cells.map((user)=>{\n                              if(each.type === 'boolean' && each.row === user.row && each.column === user.column){\n                                user.data = each.data;\n                              }\n                            })\n                          })\n                        })\n                        \n                        resolve(resp.data)\n                      })\n                   }\n                   else if(type === 'addRow'){\n\n                    return new Promise((resolve)=>{\n                       value[rows.length - 1].map((each)=>{\n                         if(each.type === 'datetime'){\n                            each.data = new Date(each.data)\n                          }\n                        resp.data.cells.push(each)\n                       })\n                       resolve(resp.data)\n                    })\n                   }\n                   else if(type === 'string' || type === 'number' || type === 'datetime'){\n                       \n                      return new Promise((resolve)=>{\n\n                        value.map((row)=>{\n                          row.map((each)=>{\n                            resp.data.cells.map((user)=>{\n                              if(each.row === user.row && each.column === user.column){\n                                if(each.type === 'number'){\n                                  user.data = +each.data;\n                                }\n                                else{\n                                  user.data = each.data;\n                                }\n                               \n                              }\n                            })\n                          })\n                        })\n                        \n                        resolve(resp.data)\n                      })\n                    }\n                  \n              })\n               .then((resp)=>{\n\n                 return new Promise((resolve)=>{\n                       \n                      let res =  axios.patch(`https://test-table-9a0f5.firebaseio.com/data.json`, { ...resp });\n                      resolve(res)\n                 })\n                })\n                .then((resp)=>{\n                  let changedRows = countRows(resp.data, true)\n                  \n                  return changedRows\n                })\n                .then((resp)=>{\n                  \n                  if(sorted){\n                    resp.map((each)=>{\n                      sortRows.map((elem)=>{\n                        if(each.column === elem.column && each.row === elem.row){\n                            elem.data = each.data\n                        }\n                      })\n                    })\n                    setDefaultRows(resp)\n                    setSortRows(sortRows)\n                    setRows([].concat(sortRows))  \n                  }\n                  else{\n                    setRows([].concat(resp))\n                  }\n                })\n                .then(()=>{\n                  setDisabled(false)\n                })\n                .catch((error)=>{\n                    throw new Error (error)\n                })\n      \n    }\n\n\n  function changeStatus(x, y, type, value){\n    \n\n      rows.map((item, index)=>{\n        item.map((elem)=>{\n\n         if(type === 'boolean'){\n          if(elem.type === 'boolean' && elem.row === x && elem.column === y){\n            elem.data = !elem.data\n            }\n          }\n          else if(type === 'number' || type === 'string'){\n            if(elem.row === x && elem.column === y){\n              elem.data = value\n              }\n          }\n          else if(type === 'datetime'){\n            if(elem.row === x && elem.column === y){\n              elem.data = new Date(value)\n              }\n          } \n       \n          return elem\n        })\n          return item    \n      })\n      \n      sendDatas(rows, type)\n      \n  }\n\n  function controlDate(datetime){\n     if(datetime < 10){\n         return  '0' + datetime\n     }\n     else{\n       return datetime\n     }\n  }\n\n  function forDisabled(){\n    setDisabled(true)\n  }\n\n\n  function findRows(currentValue){\n\n          setDefaultRows((prev)=>{\n            prev = rows\n            return prev\n          }) \n    \n         let found = []\n         rows.map((row)=>{\n         \n          row.map((key)=>{\n            let value;\n            let curValue;\n\n             if(key.type === 'datetime'){\n                    let date1 = new Date(key.data);\n                    let date2;\n\n                      ['/', '.', '-'].map((spliter)=>{\n                      \n                        let split = currentValue.split(`${spliter}`)\n\n\n                      if(split.length === 3){\n                        \n                        if(split[2].length === 4){\n                          date2 = split.reverse().join('-')\n                          \n                        }\n                        else if(split[0].length === 4){\n                          date2 = split.join('-')\n                        }\n                        \n                      }\n                      \n                    })\n\n                    date2 = new Date(`${date2}`)\n\n                    value =`${date1.getFullYear()}-${date1.getMonth()}-${controlDate(date1.getDate())}`\n                    curValue = `${date2.getFullYear()}-${date2.getMonth()}-${controlDate(date2.getDate())}`\n                \n             }\n             else {\n                      value = key.data.toString().toLowerCase();\n                      curValue = currentValue.toString().toLowerCase();\n             }\n\n               \n            if(value === curValue){\n              found.push(row) \n            }\n          \n          })\n       })\n      \n      setSortRows([].concat(found))\n\n      setRows((prev)=>{\n         prev = []\n         return prev.concat(found)\n      })\n\n      setSorted(true)\n      \n  }\n  \n    \n  function showForm(action){\n    if(action === 'open'){\n      setState(true)\n    }\n    else{\n      setState(false)\n    }\n  }\n\n\n  function saveNewUser(target, index, type){\n    let {name, value} = target;\n     \n      if(!valuesForNewUser[index]){\n       \n        valuesForNewUser.push({ [name]: value })\n       }\n       else if(valuesForNewUser[index]){\n       \n        valuesForNewUser[index] = { [name]: value };\n       }\n\n       setValuesForNewUser(valuesForNewUser)\n     \n    switch(type){\n       case 'string':\n        errors[name] = value.length < 3 && value.length > 0 ? 'Minimum three characaters required': ''\n        break;\n       case 'date':\n        errors[name] = dateRegexp.test(value) && value.length > 0 ? '' : 'invalid date format'\n        break;\n       case 'boolean':\n        errors[name] = booleanRegexp.test(value) && value.length > 0 ? '' : 'choose + or - '\n        break;\n      case 'number':\n        errors[name] = numberRegexp.test(value) && value.length > 0 ? '' : 'indicate your age'\n        default: \n        break;\n    }\n    setErrors(errors);\n\n  }\n\n  function checkFields(){\n    let checked = 0;\n    let result;\n    \n    \n     Object.values(errors).map((value)=>{\n        value === '' ? checked++ : checked--\n     })\n    \n    checked === titles.length ? result = true : result = false;\n    \n    return result;\n\n  }\n\n\n  function saveRow(){\n\n     if(checkFields()){\n         \n      let count = 0;\n      let newUser = [];\n\n       while(count <= titles.length - 1){\n         let object = {};\n         Object.assign(object, rows[rows.length - 1][count]);\n\n         for(let key in valuesForNewUser[count]){\n            if(object.type === 'boolean'){\n              if(valuesForNewUser[count][key] === '+'){\n                object.data = true\n              }\n              else{\n                object.data = false\n              }\n            }\n            else if(object.type === 'datetime'){\n                object.data = new Date(valuesForNewUser[count][key])\n            }\n            else{\n              object.data = valuesForNewUser[count][key]\n            }\n           \n           object.row = rows[rows.length - 1][count].row + 1\n         }\n         newUser.push(object);\n         count++;\n       }\n          rows.push(newUser)\n          setRows(rows)\n\n          setState(false)\n          setValuesForNewUser([])\n          sendDatas(rows, 'addRow')\n          \n     }\n     else{\n          setWarning(true)\n     }\n  }\n\n  function removeWarning(){\n    if(warning){\n      warning = false\n      setWarning(warning)\n    }\n    \n  }\n\n  function returnPreviousState(){\n    setRows(defaultRows)\n    setSorted(false)  \n  }\n\n  function closeForm(){\n    setErrors({})\n  }\n\n\n  return (\n    <TableContext.Provider value={{ tableName, titles, warning, sorted, sortRows, errors, disabled,\n     removeWarning, changeStatus, findRows, saveNewUser, returnPreviousState, forDisabled, closeForm}}>\n        <div className=\"container\">\n          <Header active={active} saveRow={saveRow}/>\n          <Search />\n          {\n            loading && <Loader/>\n          }\n          \n          {\n            loading !== true ? <Table rows={rows}/> : <p className=\"loading\">Loading...</p>\n          }\n          \n          {\n            active === false ? <AddRow showForm={showForm} /> : <Form showForm={showForm} />\n          }\n        </div>\n  </TableContext.Provider>\n      \n    \n  );\n}\n\n export default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport * as firebase from 'firebase';\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport { MuiPickersUtilsProvider } from \"@material-ui/pickers\"\n\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyBBK5Gjt_6SvuDxrL8797cVMN2_0QdnmlQ\",\n    authDomain: \"test-table-9a0f5.firebaseapp.com\",\n    databaseURL: \"https://test-table-9a0f5.firebaseio.com\",\n    projectId: \"test-table-9a0f5\",\n    storageBucket: \"test-table-9a0f5.appspot.com\",\n    messagingSenderId: \"675293196431\",\n    appId: \"1:675293196431:web:e06385934dd4f4ca7480fa\"\n}\n\nfirebase.initializeApp(firebaseConfig)\n\nReactDOM.render(\n      <React.StrictMode>\n       <App />\n      </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}